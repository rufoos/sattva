#!/usr/bin/env ruby

require 'optparse'

options = { :action => :run }

daemonize_help = "run daemonized in the background (default: false)"
ssl_help = "enable SSL"
port_help = "server port (default: 8080)"
pidfile_help = "the pid filename"
logfile_help = "the log filename"
include_help = "an additional $LOAD_PATH (may be used more than once)"
debug_help = "set $DEBUG to true"
warn_help = "enable warnings"
ssl_key_help = "the SSL certificate .key filename"
ssl_cert_help = "the SSL certificate .crt filename"

op = OptionParser.new
op.banner = "An example of how to daemonize a long running Ruby process."
op.separator ""
op.separator "Usage: server [options]"
op.separator ""

op.separator ""
op.separator "Process options:"
op.on("-d", "--daemonize", daemonize_help) { options[:daemonize] = true }
op.on("--port", port_help) { options[:port] = 8080 }
op.on("--pid PIDFILE", pidfile_help) { |value| options[:pidfile] = value }
op.on("--log LOGFILE", logfile_help) { |value| options[:logfile] = value }
op.on("--ssl", ssl_help) { options[:ssl] = true }
op.on("--ssl-key-file SSL .key file path", ssl_key_help) { |value| options[:ssl_key_file] = value }
op.on("--ssl-cert-file SSL .crt file path", ssl_cert_help) { |value| options[:ssl_cert_file] = value }

op.separator ""
op.separator "Ruby options:"
op.on("-I", "--include PATH", include_help) { |value| $LOAD_PATH.unshift(*value.split(":").map { |v| File.expand_path(v) }) }
op.on("--debug", debug_help) { $DEBUG = true }
op.on("--warn", warn_help) { $-w = true }

op.separator ""
op.separator "Common options:"
op.on("-h", "--help") { options[:action] = :help }
op.on("-v", "--version") { options[:action] = :version }

op.separator ""
op.parse!(ARGV)

require './forward-proxy.rb' unless options[:action] == :help

case options[:action]
when :help then
  puts op.to_s
when :version then
  puts ForwardProxy::VERSION
else
  ForwardProxy.run!(options)
end
